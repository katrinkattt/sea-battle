{"version":3,"sources":["components/field.jsx","components/button.jsx","components/window.jsx","components/footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["arr","arrC","i","j","Field","props","arrComp","arrPlayer","rez","real","sumBoot","enemyCount","playerCount","state","statusGame","addClassN","min","max","Math","ceil","floor","random","a","b","player","this","comp","randPosition","positionViev","arry","boot","r","p","document","getElementById","className","sea","alert","one","double","tre","four","row","createRandom","pos","f","ms","setTimeout","apply","arguments","boom","flub","block","setState","nBlock","moveComp","type","value","id","Fragment","map","numList","key","num","onClick","autoPosition","delay","clickPosition","killPosition","React","Component","Button","name","clickStart","Window","title","for","placeholder","class","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","btn","start","btnClose","addEventListener","style","display","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c5acda5a.chunk.js","sourcesContent":["import { render } from '@testing-library/react';\r\nimport React from 'react';\r\n\r\nvar x = 10, y = 10, arr = [10], arrC = [10];\r\nfor (var i = 0; i < x; i++) {\r\n  arr[i] = [10]\r\n  arrC[i] = [10]\r\n  for (var j = 0; j < y; j++) {\r\n    arr[i][j] = 0\r\n    arrC[i][j] = 0\r\n  }\r\n}\r\n\r\nexport class Field extends React.Component {\r\n  arr = arr\r\n  arrC = arrC\r\n  arrComp = arrC\r\n  arrPlayer = arr\r\n  rez = true\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      real: 0,\r\n      statusGame: [\"ваш ход\", \"ход противника\", \"победa ваша\", \"победa противвника\"],\r\n      addClassN: [\r\n        \"btn__pos__field\",\r\n        \"field__boot\",\r\n        \"field__boom\",\r\n        \"field__flub\"\r\n      ]\r\n    }\r\n  }\r\n  real = 0\r\n  sumBoot = 0\r\n  enemyCount = 40\r\n  playerCount = 40\r\n  createRandom(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min\r\n  }\r\n  autoPosition(a, b) {\r\n    let player = this.arrPlayer\r\n    let comp = this.arrComp\r\n    this.randPosition(player)\r\n    this.randPosition(comp)\r\n    this.positionViev(player)\r\n  }\r\n  positionViev(arry) {\r\n    let boot = this.state.addClassN[1]\r\n    for (let r = 0; r < 10; r++) {\r\n      for (let p = 0; p < 10; p++) {\r\n        if (arry[r][p] == 2) {\r\n          document.getElementById(\"pos\" + r + p).className = boot\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // функция ручного расставления кораблей\r\n  clickPosition(a, b) {\r\n    let boot = this.state.addClassN[1]\r\n    let sea = this.state.addClassN[0]\r\n    if (this.sumBoot <= 38) {\r\n      if (this.arrPlayer[a][b] == 2) {\r\n        this.arrPlayer[a][b] -= 2\r\n        document.getElementById(\"pos\" + a + b).className = sea\r\n        this.sumBoot -= 2\r\n      }\r\n      else {\r\n        this.arrPlayer[a][b] += 2\r\n        document.getElementById(\"pos\" + a + b).className = boot\r\n        this.sumBoot += 2\r\n      }\r\n    }\r\n    else {\r\n      alert(\"корабли закончилсь\")\r\n      let comp = this.arrComp\r\n      this.randPosition(comp)\r\n    }\r\n  }\r\n  randPosition(arry) {\r\n    let c = 0, e = 9\r\n    let one = 4\r\n    let double = 3\r\n    let tre = 2\r\n    let four = 1\r\n    while (four > 0) {\r\n      let row = this.createRandom(c, 4)\r\n      let pos = this.createRandom(c, 4)\r\n      if (arry[row][pos] == 0 && arry[row][pos + 1] == 0 && arry[row + 1][pos] == 0 && arry[row][pos + 2] == 0 && arry[row][pos + 3] == 0 && arry[row][pos + 4] == 0) {\r\n        arry[row][pos] = 2\r\n        arry[row][pos + 1] = 2\r\n        arry[row][pos + 2] = 2\r\n        arry[row][pos + 3] = 2\r\n\r\n        four = 0\r\n      }\r\n      else if (arry[row][pos] == 0 && arry[row + 1][pos] == 0 && arry[row + 2][pos] == 0 && arry[row + 3][pos] == 0 && arry[row + 4][pos] == 0 && arry[row + 5][pos] == 0) {\r\n        arry[row][pos] = 2\r\n        arry[row + 1][pos] = 2\r\n        arry[row + 2][pos] = 2\r\n        arry[row + 3][pos] = 2\r\n        four = 0\r\n      }\r\n    }\r\n    while (tre > 0) {\r\n      let row = this.createRandom(c, 4)\r\n      let pos = this.createRandom(c, 4)\r\n      if (arry[row][pos] == 0 && arry[row][pos + 1] == 0 && arry[row + 1][pos] == 0 && arry[row][pos + 2] == 0 && arry[row][pos + 3] == 0 && arry[row + 1][pos + 1] == 0 && arry[row][pos + 4] == 0) {\r\n        arry[row][pos] = 2\r\n        arry[row][pos + 1] = 2\r\n        arry[row][pos + 2] = 2\r\n\r\n        tre -= 1\r\n      }\r\n      else if (arry[row][pos] == 0 && arry[row + 1][pos + 1] == 0 && arry[row + 1][pos] == 0 && arry[row + 2][pos] == 0 && arry[row + 3][pos] == 0 && arry[row + 4][pos] == 0 && arry[row + 5][pos] == 0) {\r\n        arry[row][pos] = 2\r\n        arry[row + 1][pos] = 2\r\n        arry[row + 2][pos] = 2\r\n        tre -= 1\r\n      }\r\n    }\r\n    while (double > 0) {\r\n      let row = this.createRandom(1, e)\r\n      let pos = this.createRandom(c, e)\r\n      if (arry[row][pos] == 0 && arry[row - 1][pos] == 0 && arry[row - 1][pos + 1] == 0 && arry[row][pos + 1] == 0 && arry[row][pos + 2] == 0 && arry[row + 1][pos] == 0 && arry[row][pos + 2] == 0) {\r\n        arry[row][pos] = 2\r\n        arry[row][pos + 1] = 2\r\n        double--\r\n      }\r\n    }\r\n    while (one > 0) {\r\n      let row = this.createRandom(1, e)\r\n      let pos = this.createRandom(1, e)\r\n      if (arry[row][pos] == 0 && arry[row + 1][pos] == 0 && arry[row][pos - 1] == 0 && arry[row - 1][pos] == 0 && arry[row][pos + 1] == 0) {\r\n        arry[row][pos] = 2\r\n        one--\r\n      }\r\n    }\r\n  }\r\n  delay(f, ms) {\r\n    return function () {\r\n      setTimeout(() => f.apply(this, arguments), ms);\r\n    }\r\n  }\r\n  moveComp() {    //генерация ходов Compa\r\n    let boom = this.state.addClassN[2]\r\n    let flub = this.state.addClassN[3]\r\n    let row = this.createRandom(0, 9)\r\n    let block = this.createRandom(0, 9)\r\n    if (this.playerCount > 1) {\r\n      if (this.arrPlayer[row][block] == 2) {  // попадание\r\n        this.setState(({ real }) => ({ real: real = 1 }))\r\n        this.arrPlayer[row][block] = 1\r\n        document.getElementById(\"pos\" + row + block).className = boom\r\n        this.playerCount -= 2\r\n        if (this.arrPlayer[row][block + 1] == 2) {  //повторное попадание\r\n          let nBlock = block + 1\r\n          this.arrPlayer[row][block + 1] = 1\r\n          document.getElementById(\"pos\" + row + nBlock).className = boom\r\n          this.playerCount -= 2\r\n        }\r\n      }\r\n      if (this.arrPlayer[row][block] == 0) {\r\n        this.arrPlayer[row][block] -= 0\r\n        document.getElementById(\"pos\" + row + block).className = flub\r\n        this.setState(({ real }) => ({ real: real = 0 })) //промах\r\n      }\r\n    }\r\n    else {\r\n      // alert(\"you is fall\")\r\n      this.setState(({ real }) => ({ real: real = 3 }))\r\n    }\r\n  }\r\n  killPosition(a, b) {    //выстрел по противнику\r\n    let boom = this.state.addClassN[2]\r\n    let flub = this.state.addClassN[3]\r\n    if (this.enemyCount > 0) {\r\n      if (this.arrComp[a][b] == 2) {\r\n        this.arrComp[a][b] = 1\r\n        document.getElementById(\"posC\" + a + b).className = boom\r\n        this.enemyCount -= 2\r\n        this.setState(({ real }) => ({ real: real = 0 }))\r\n      }\r\n      else if (this.arrPlayer[a][b] != 1) {\r\n        this.arrComp[a][b] = 0\r\n        document.getElementById(\"posC\" + a + b).className = flub\r\n        this.setState(({ real }) => ({ real: real = 1 }))\r\n        // this.delay(this.moveComp(), 700)//задержка для реалистичности, не очень удобно при ускорерии хдов\r\n        this.moveComp()\r\n      }\r\n    }\r\n    else {\r\n      alert(\"you vin\")\r\n      this.setState(({ real }) => ({ real: real = 2 }))\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input type=\"text\" value={this.state.statusGame[this.state.real]} className=\"hod\" id=\"hod\" />\r\n        < div className=\"container\">\r\n          <div className=\"field__main\">\r\n            <React.Fragment>\r\n              <table>\r\n                <tbody>\r\n                  {\r\n                    this.arrPlayer.map((numList, i) => (\r\n                      <tr key={i}>\r\n                        {\r\n                          numList.map((num, j) =>\r\n                            <td key={j}>\r\n                              <button onClick={this.rez == true ? () => this.autoPosition(i, j) : () => this.delay(this.clickPosition(i, j), 1500)} className={this.state.addClassN[0]} id={\"pos\" + i + j}></button>\r\n                            </td>\r\n                          )\r\n                        }\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </React.Fragment>\r\n          </div>\r\n          <div className=\"field__main\">\r\n            <React.Fragment>\r\n              <table>\r\n                <tbody>\r\n                  {\r\n                    this.arrComp.map((numList, i) => (\r\n                      <tr key={i}>\r\n                        {\r\n                          numList.map((num, j) =>\r\n                            <td key={j}>\r\n                              <button onClick={this.playerCount != 0 ? () => this.killPosition(i, j) : 0} className={this.state.addClassN[0]} id={\"posC\" + i + j}></button>\r\n                            </td>\r\n                          )\r\n                        }\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </React.Fragment>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// export default Field\r\n\r\n\r\n\r\n/*\r\n\r\nalert(\"корабли готовы\")\r\n      let c = 0, e = 9\r\n      let one = 4\r\n      let double = 3\r\n      let tre = 2\r\n      let four = 1\r\n      while (four > 0) {\r\n        let row = this.createRandom(c, 4)\r\n        let pos = this.createRandom(c, 4)\r\n        if (this.arrComp[row][pos] == 0 && this.arrComp[row][pos + 1] == 0 && this.arrComp[row + 1][pos] == 0 && this.arrComp[row][pos + 2] == 0 && this.arrComp[row][pos + 3] == 0 && this.arrComp[row][pos + 4] == 0) {\r\n          this.arrComp[row][pos] = 2\r\n          this.arrComp[row][pos + 1] = 2\r\n          this.arrComp[row][pos + 2] = 2\r\n          this.arrComp[row][pos + 3] = 2\r\n\r\n          four = 0\r\n        }\r\n        else if (this.arrComp[row][pos] == 0 && this.arrComp[row + 1][pos] == 0 && this.arrComp[row + 2][pos] == 0 && this.arrComp[row + 3][pos] == 0 && this.arrComp[row + 4][pos] == 0 && this.arrComp[row + 5][pos] == 0) {\r\n          this.arrComp[row][pos] = 2\r\n          this.arrComp[row + 1][pos] = 2\r\n          this.arrComp[row + 2][pos] = 2\r\n          this.arrComp[row + 3][pos] = 2\r\n          four = 0\r\n        }\r\n      }\r\n      while (one >= 1) {\r\n        let row = this.createRandom(c, e)\r\n        let pos = this.createRandom(c, e)\r\n        if (this.arrComp[row + 1][pos] == 0 && this.arrComp[row][pos] == 0 && this.arrComp[row][pos + 1] == 0) {\r\n          this.arrComp[row][pos] = 2\r\n          one--\r\n        }\r\n      }\r\n      while (double >= 1) {\r\n        let row = this.createRandom(c, e)\r\n        let pos = this.createRandom(c, e)\r\n        if (this.arrComp[row][pos] == 0 && this.arrComp[row][pos + 1] == 0 && this.arrComp[row][pos + 2] == 0 && this.arrComp[row + 1][pos] == 0 && this.arrComp[row][pos + 2] == 0) {\r\n          this.arrComp[row][pos] = 2\r\n          this.arrComp[row][pos + 1] = 2\r\n          double--\r\n        }\r\n      }\r\n      while (tre >= 1) {\r\n        let row = this.createRandom(c, e)\r\n        let pos = this.createRandom(c, e)\r\n        if (this.arrComp[row][pos] == 0 && this.arrComp[row][pos + 1] == 0 && this.arrComp[row + 1][pos] == 0 && this.arrComp[row][pos + 2] == 0 && this.arrComp[row + 1][pos + 2] == 0 && this.arrComp[row][pos + 3] == 0 && this.arrComp[row + 1][pos + 3] == 0 && this.arrComp[row][pos + 4] == 0) {\r\n          this.arrComp[row][pos] = 2\r\n          this.arrComp[row][pos + 1] = 2\r\n          this.arrComp[row][pos + 2] = 2\r\n          tre--\r\n        }\r\n        else if (this.arrComp[row][pos] == 0 && this.arrComp[row + 1][pos] == 0 && this.arrComp[row + 2][pos] == 0 && this.arrComp[row + 3][pos] == 0 && this.arrComp[row + 4][pos] == 0 && this.arrComp[row + 1][pos + 1] == 0) {\r\n          this.arrComp[row][pos] = 2\r\n          this.arrComp[row + 1][pos] = 2\r\n          this.arrComp[row + 2][pos] = 2\r\n          tre--\r\n        }\r\n      }\r\n\r\n*/","import React from 'react';\r\n\r\nexport default function Button(props){\r\n    return(\r\n        <button className=\"btn\" id=\"btnClick\" >{props.name}\r\n\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\n\r\nconst start = document.getElementById('start')\r\nfunction clickStart() {\r\n    const player = document.getElementById('player').value\r\n    const enemy = document.getElementById('enemy').value\r\n    // return(player, enemy)\r\n}\r\nexport default function Window(props) {\r\n    return (\r\n        <div id=\"window\" className=\"modal__main\">\r\n            <div className=\"modal__title\">\r\n                <div className=\"modal__text__title\">{props.title}</div>\r\n                <div id=\"btnClose\" className=\"modal__close\">\r\n                    <div className=\"modal__close__line\">\r\n                    </div>\r\n                    <div className=\"modal__close__line1\"></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal__text\">\r\n                {/* <form> */}\r\n                <label for=\"player\">Ваше имя</label>\r\n                <input type=\"text\" id=\"player\" placeholder=\"Представьтесь\" className=\"input__name\" />\r\n                <label for=\"enemy\">Назовите противника</label>\r\n                <input type=\"text\" id=\"enemy\" placeholder=\"Назовите противника\" className=\"input__name\" />\r\n                <div>\r\n                    <input type=\"checkbox\" class=\"\" id=\"hand\" />\r\n                    <label class=\"form-check-label\" for=\"hand\">Расставить корабли в ручную</label>\r\n                    <input type=\"checkbox\" class=\"\" id=\"auto\" />\r\n                    <label class=\"\" for=\"auto\">Расставить автоматически</label>\r\n                </div>\r\n                <div>\r\n                    <button id=\"start\" onClick={clickStart} class=\"btn\">Начать</button>\r\n                </div>\r\n                {/* </form> */}\r\n            </div>\r\n            <div className=\"modal__footer\"></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Footer(props){\r\n    return(\r\n        <div className=\"footer__main\">\r\n            <p>2020 NikitinaE</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport { Field } from './components/field'\nimport Button from './components/button'\nimport Window from './components/window'\nimport Footer from './components/footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h3>морской бой</h3>\n      </header>\n      <div className=\"control\">\n        <Window title=\"введите имена\" />\n      </div>\n      <div className=\"control\">\n        <Button name=\"start game\" />\n      </div>\n      <Field />\n      <Footer />\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode><App /></React.StrictMode>, document.getElementById('root'));\n\nconst btn = document.getElementById('btnClick');\nconst start =  document.getElementById('start');\nconst window = document.getElementById('window');\nconst btnClose = document.getElementById('btnClose');\n\n// const player = document.getElementById('player');\n// const enemy = document.getElementById('enemy');\n// const hod = document.getElementById('hod');\n\nbtn.addEventListener('click', () => {\n  window.style.display='block';\n});\n\nbtnClose.addEventListener('click', () => {\n  window.style.display='none';\n})\nstart.addEventListener('click', () => {\n  window.style.display='none';\n})\n\n// hod.addEventListener('durationchange',()=>{\n//   if(hod.value == \"ваш ход\"){\n//     hod.value = \"ход \"+ player.value\n//   }\n//   else if(hod.value == \"ход противника\"){\n//     hod.value = \"ход \"+ enemy.value\n//     alert(\"ход \"+ enemy.value)\n//   }\n//   else if(hod.value == \"победa ваша\"){\n//     hod.value = \"победa \"+ player.value\n//   }\n//   else if(hod.value == \"победa противвника\"){\n//     hod.value = \"победa \"+enemy.value\n//   }\n// })\n\nserviceWorker.unregister();\n"],"sourceRoot":""}